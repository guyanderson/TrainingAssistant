@model TrainingHelper.ViewModels.BayDetailVM

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Here are the Tools located in @Model.Bay.Name.</h3>
    
@foreach (var tool in Model.Bay.Tool)
{
    int numOfCertifiedOps = tool.Certification.OperatorCertifications.AsQueryable().Select(opCert => opCert.Oper).Count();

    @if (numOfCertifiedOps >= tool.Certification.TargetTrained)
    {
        <div class="panel panel-success col-md-4 fill">
            <div class="panel-heading mine" data-toggle="popover" title="Training Requirements are met" data-content="@tool.Name requireds @tool.Certification.TargetTrained operators to hold the @tool.Certification.Name certification. <br /><br /> Operators who have this certification are:<br /> @foreach (var cert in tool.Certification.OperatorCertifications) {@cert.Oper.Name <br />}">@Html.ActionLink(tool.Name, "Details", "Tool", new { id = tool.ToolId })</div>
            <div class="panel-body panel-body">In order to run @tool.Name, operators are required to have the @Html.ActionLink(tool.Certification.Name, "Details", "Certification", new { id = tool.ToolId }, new { @class = "btn btn-success custom" }) certification.</div>
        </div>

    }
    else
    {
        <div class="panel panel-danger col-md-4 fill">
            <div class="panel-heading mine" data-toggle="popover" title="Missing required Certifications" data-content="@tool.Name requireds @tool.Certification.TargetTrained operators to hold the @tool.Certification.Name certification. Only @numOfCertifiedOps of @tool.Certification.TargetTrained operators are certified. <br /><br /> Operators who have this certification are:<br /> @foreach (var cert in tool.Certification.OperatorCertifications) {@cert.Oper.Name <br />}">@Html.ActionLink(tool.Name, "Details", "Tool", new { id = tool.ToolId })</div>
            <div class="panel-body panel-body">In order to run @tool.Name, operators are required to have the @Html.ActionLink(tool.Certification.Name, "Details", "Certification", new { id = tool.ToolId }, new { @class = "btn btn-success custom" }) certification.</div>
        </div>
    }
}
<script>
    $(document).ready(function () {
        $('[data-toggle="popover"]').popover({
            placement: 'bottom',
            trigger: 'hover',
            html: 'true'
        });
    });
</script>

@*
    @model TrainingHelper.ViewModels.BayDetailVM

    @{
        ViewData["Title"] = "Details";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <h3>Here are the Tools located in @Model.Bay.Name.</h3>

    <div class="row">
        @foreach (var tool in Model.Bay.Tool)
        {
            <div class="panel panel-success col-md-4 fill">
                <div class="panel-heading mine">@Html.ActionLink(tool.Name, "Details", "Tool", new { id = tool.ToolId }) </div>
                <div class="panel-body panel-body-custom">

                    bool enough = false;
                    int numOfCertifiedOps = cert.Count();
                    foreach (var x in bay.Tool)
                    {


                    if (numOfCertifiedOps >= tool.Certification.TargetTrained)
                    {
                    enough = true;
                    }
                    else
                    {
                    enough = false;
                    break;
                    }
                    }
                    if (enough == true)
                    {
                    @if (numOfCertifiedOps >= tool.Certification.TargetTrained)
                    {
                        <div class="col-md-6 panel-custom" data-placement="bottom" data-toggle="popover" title="Training Requirements are met" data-content="@tool.Name requireds @tool.Certification.TargetTrained operators to hold the @tool.Certification.Name certification. <br /><br /> Operators who have this certification are:<br /> @foreach (var cert in tool.Certification.OperatorCertifications) {@cert.Oper.Name <br />}">
                            @Html.ActionLink(tool.Name, "Details", "Tool", new { id = tool.ToolId }, new { @class = "btn btn-success custom" })
                        </div>
                    }
                    else
                    {
                        <div class="col-md-6 panel-custom" data-toggle="popover" title="Missing required Certifications" data-content="@tool.Name requireds @tool.Certification.TargetTrained operators to hold the @tool.Certification.Name certification. Only @numOfCertifiedOps of @tool.Certification.TargetTrained operators are certified. <br /><br /> Operators who have this certification are:<br /> @foreach (var cert in tool.Certification.OperatorCertifications) {@cert.Oper.Name <br />}">
                            @Html.ActionLink(tool.Name, "Details", "Tool", new { id = tool.ToolId }, new { @class = "btn btn-danger custom" })
                        </div>
                    }

                </div>
            </div>
        }
    </div>

                    <script>
                        $(document).ready(function () {
                            $('[data-toggle="popover"]').popover({
                                placement: 'bottom',
                                trigger: 'hover',
                                html: 'true'
                            });
                        });
                    </script>
*@

@*
    @model TrainingHelper.ViewModels.BayDetailVM

    @{
        ViewData["Title"] = "Details";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <h3>Here are the Tools located in @Model.Bay.Name.</h3>

    @foreach (var tool in Model.Bay.Tool)
    {
        int numOfCertifiedOps = tool.Certification.OperatorCertifications.AsQueryable().Select(opCert => opCert.Oper).Count();

        @if (numOfCertifiedOps >= tool.Certification.TargetTrained)
        {
            <div class="row">
                @Html.ActionLink(tool.Name, "Details", "Tool", new { id = tool.ToolId }, new { @class = "btn btn-success custom" })
            </div>
        }
        else
        {
            <div class="row">
                @Html.ActionLink(tool.Name, "Details", "Tool", new { id = tool.ToolId }, new { @class = "btn btn-danger custom" })
            </div>
        }
    }
*@